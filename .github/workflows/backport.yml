name: backport

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: "Target branch"
        required: true
        type: string
      pull_request:
        description: "Pull request"
        required: true
        type: string
      dryRun:
        description: "Dry run"
        required: false
        default: "true"
        type: string
  issue_comment:
    types:
      - created

jobs:
  backport:
    name: Backport
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event.issue.pull_request != '' &&
       (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR') &&
       startsWith(github.event.comment.body, '/backport'))
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get target branch and PR number
        id: target_info
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            pr_number="${{ github.event.inputs.pull_request}}"
            branch_name="${{ github.event.inputs.target_branch }}"
          else
            pr_number="${{ github.event.issue.number }}"
            branch_name=$(echo "${{ github.event.comment.body }}" | awk '{print $2}')
          fi
          if [[ -z "$branch_name" ]]; then
            echo "Target branch is not specified"
            exit 1
          fi
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT

      - name: Check if target branch exists
        id: check_branch
        run: |
          if git ls-remote --exit-code --heads origin ${{ steps.target_info.outputs.branch_name }} > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Handle invalid branch
        if: steps.check_branch.outputs.exists == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = "${{ steps.target_info.outputs.branch_name }}";
            const message = `Backporting to ${branchName} failed. The branch does not exist.`;
            if (context.eventName === 'issue_comment') {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            }
            core.setFailed(message);

      - name: Backporting
        if: steps.check_branch.outputs.exists == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: kiegroup/git-backporting@v4.8.5
        with:
          no-squash: true
          target-branch: ${{ steps.target_info.outputs.branch_name }}
          pull-request: ${{ github.server_url }}/${{ github.repository }}/pull/${{ steps.target_info.outputs.pr_number }}
          auth: ${{ secrets.GITHUB_TOKEN }}
          dry-run: ${{ inputs.dryRun }}
